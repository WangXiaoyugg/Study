### 学习目标，使用nodejs实现文件上传的功能1. 学会node-formidable 使用数据上传的原理Node.js 的 http 模块可以对报文的头部进行解析，然后出发 request 事件，并对请求中的内容进行处理、解析。通过报头的 Transfer-Encoding 或 Content-Length 即可判断请求中是否带有内容表单提交，请求报文头中的 Content-Type 字段值为 application/x-www-form-urlenconded，Node.js 解析过后，我们便可以通过访问 req.body 获取表单提交的数据可以通过判断请求报文头中的 Content-Type 字段值判断上传数据的格式，例如 JSON 和 XML 文件对应的值为 application/josn 和 application/xml。判断和解析原理也都基本相似遇到 file 类型的控件，此类型的表单需要指定表单属性 enctype 为 multipart/form-data数据解析思路必须使用 buffer 来进行 post 数据的解析利用边界字符串（boundary）来分割各个字段数据每个字段数据使用 \r\n 分割利用上面的方法，我们确定了数据在 buffer 中的 start 和 end，利用 buffer.splice(start, end) 便可以进行文件写入了问题刷新本页，会在此提交 post 请求；没有图片预览；刷新detail页面,才能看到新产生的图片不上传文件的情况下点击 ，出现报错页面的ui还可以继续美化通过使用 PRG（Post-Redirect-Get） 模式，将 post 提交后的返回结果重定向到新的一页，浏览器通过 get 那个页面来解决第一个问题,