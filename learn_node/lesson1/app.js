//node代码监听了3000端口，// 用户通过访问http://localhost:3000/ 得到了内容，为什么呢？/** 端口 就像不同的门 去往不同的程序* 端口号就是门牌号 1- 65535 ,*对TCP来说, port 0 被保留，不能被使用.* 对于UDP来说, source端的端口号是可选的，* 为0时表示无端口** app.listen(3000)，进程就被打标，* 电脑接收到的3000端口的网络消息就会被发送给我们启动的这个进程** url** ftp: <scheme>://<user>:<password>@<host>:<port>/<url-path>* <scheme>://<host>:<port>/<url-path>* http :// localhost:3000 /** Node.js以npm作为包管理工具，主要的命令有npm install、npm list等。* web服务器启动时，会监听一个特定的端口* url和uri常用来定位资源，但要注意不一定只是用来定位网页*** uri 和 url区别* URI 是统一资源标识符，而 URL 是统一资源定位符* uri 包含url* 二者的区别在于，URI表示请求服务器的路径，定义这么一个资源。* 而URL同时说明要如何访问这个资源（http://）* URI可以表示一个域，也可以表示一个资源。* URL只能表示一个资源。* URI是一个字符串格式规范  并没有指定它的用途* URL是资源定位的规范 包括网址 ftp服务器  文件路径大白话，就是URI是抽象的定义，不管用什么方法表示，只要能定位一个资源，就叫URI，本来设想的的使用两种方法定位：1，URL，用地址定位；2，URN 用名称定位。举个例子：去村子找个具体的人（URI），如果用地址：某村多少号房子第几间房的主人 就是URL， 如果用身份证号+名字 去找就是URN了。* //*除了install和list，npm还有其他多种命令，请你在控制台输入npm,看看还有哪些命令以及它们的作用测试若在一台机器上运行多个Node.js服务器进程且它们监听端口相同时时会发生什么样的情况;端口被占用，冲突*/var express = require('express');var app = express();app.get('/',function (req,res) {    res.send('hello world');});app.listen(3000,function () {    console.log('app is listening at port 3000')});